print("Variation of A")
print(var(a))
print("Variation of Y")
print(var(y))
print("Median of A")
print(median(a))
print("Median of Y")
print(median(y))
print("Skewness of A")
print(skewness(a))
print("Skewness of Y")
print(skewness(y))
print("Kurtosis of A")
print(kurtosis(a))
print("Kurtosis of Y")
print(kurtosis(y))
#Mode for a
uniqa <- unique(a)
print(uniqa [which.max(tabulate(match(a, uniqa)))])
#Mode for y
uniqy <- unique(y)
moda <- uniqa [which.max(tabulate(match(a, uniqa)))]
mody <- uniqy[which.max(tabulate(match(y, uniqy)))]
print("Mode of A")
print(moda)
print("Mode of Y")
print(mody)
print("Correlation between A and Y")
print(cor(a,y))
print("Covariance between A and Y")
print(cov(a,y))
datatable <- matrix(c(mean(a),mean(y),sd(a),sd(y),var(a),var(y),median(a),median(y),skewness(a),skewness(y),kurtosis(a),kurtosis(y),moda,mody,cor(a,y),cov(a,y)),ncol=2,byrow=TRUE)
rownames(datatable) <- c("mean","sd","var","median","skewness","kurtosis","mod","corelation and covariance")
datatable
write.table(datatable, "Data.txt", sep="\t")
write.xlsx(datatable, "Data.xlsx")
library(moments)
library(xlsx)
seed<-1811994
set.seed(seed)
print("Seed:")
print(seed)
Normal Distribution
x<-rnorm(30)
y<-rnorm(30)
print("Value of A : ")
print(a)
print("Value of B : ")
print(b)
print("Mean of A")
print(mean(a))
print("Mean of Y")
print(mean(y))
print("Standard Deviation of A")
print(sd(a))
print("Standard Deviation of Y")
print(sd(y))
print("Variation of A")
print(var(a))
print("Variation of Y")
print(var(y))
print("Median of A")
print(median(a))
print("Median of Y")
print(median(y))
print("Skewness of A")
print(skewness(a))
print("Skewness of Y")
print(skewness(y))
print("Kurtosis of A")
print(kurtosis(a))
print("Kurtosis of Y")
print(kurtosis(y))
#Mode for a
uniqa <- unique(a)
print(uniqa [which.max(tabulate(match(a, uniqa)))])
#Mode for y
uniqy <- unique(y)
moda <- uniqa [which.max(tabulate(match(a, uniqa)))]
mody <- uniqy[which.max(tabulate(match(y, uniqy)))]
print("Mode of A")
print(moda)
print("Mode of Y")
print(mody)
print("Correlation between A and Y")
print(cor(a,y))
print("Covariance between A and Y")
print(cov(a,y))
datatable <- matrix(c(mean(a),mean(y),sd(a),sd(y),var(a),var(y),median(a),median(y),skewness(a),skewness(y),kurtosis(a),kurtosis(y),moda,mody,cor(a,y),cov(a,y)),ncol=2,byrow=TRUE)
rownames(datatable) <- c("mean","sd","var","median","skewness","kurtosis","mod","corelation and covariance")
datatable
write.table(datatable, "Data.txt", sep="\t")
write.xlsx(datatable, "Data.xlsx")
library(moments)
library(xlsx)
seed<-1811994
set.seed(seed)
print("Seed:")
print(seed)
Normal Distribution
x<-rnorm(30)
y<-rnorm(30)
print("Value of A : ")
print(a)
print("Value of Y : ")
print(y)
print("Mean of A")
print(mean(a))
print("Mean of Y")
print(mean(y))
print("Standard Deviation of A")
print(sd(a))
print("Standard Deviation of Y")
print(sd(y))
print("Variation of A")
print(var(a))
print("Variation of Y")
print(var(y))
print("Median of A")
print(median(a))
print("Median of Y")
print(median(y))
print("Skewness of A")
print(skewness(a))
print("Skewness of Y")
print(skewness(y))
print("Kurtosis of A")
print(kurtosis(a))
print("Kurtosis of Y")
print(kurtosis(y))
#Mode for a
uniqa <- unique(a)
print(uniqa [which.max(tabulate(match(a, uniqa)))])
#Mode for y
uniqy <- unique(y)
moda <- uniqa [which.max(tabulate(match(a, uniqa)))]
mody <- uniqy[which.max(tabulate(match(y, uniqy)))]
print("Mode of A")
print(moda)
print("Mode of Y")
print(mody)
print("Correlation between A and Y")
print(cor(a,y))
print("Covariance between A and Y")
print(cov(a,y))
datatable <- matrix(c(mean(a),mean(y),sd(a),sd(y),var(a),var(y),median(a),median(y),skewness(a),skewness(y),kurtosis(a),kurtosis(y),moda,mody,cor(a,y),cov(a,y)),ncol=2,byrow=TRUE)
rownames(datatable) <- c("mean","sd","var","median","skewness","kurtosis","mod","corelation and covariance")
datatable
write.table(datatable, "Data.txt", sep="\t")
write.xlsx(datatable, "Data.xlsx")
library(moments)
library(xlsx)
seed<-1811994
set.seed(seed)
print("Seed:")
print(seed)
#Normal Distribution
x<-rnorm(30)
y<-rnorm(30)
print("Value of A : ")
print(a)
print("Value of Y : ")
print(y)
print("Mean of A")
print(mean(a))
print("Mean of Y")
print(mean(y))
print("Standard Deviation of A")
print(sd(a))
print("Standard Deviation of Y")
print(sd(y))
print("Variation of A")
print(var(a))
print("Variation of Y")
print(var(y))
print("Median of A")
print(median(a))
print("Median of Y")
print(median(y))
print("Skewness of A")
print(skewness(a))
print("Skewness of Y")
print(skewness(y))
print("Kurtosis of A")
print(kurtosis(a))
print("Kurtosis of Y")
print(kurtosis(y))
#Mode for a
uniqa <- unique(a)
print(uniqa [which.max(tabulate(match(a, uniqa)))])
#Mode for y
uniqy <- unique(y)
moda <- uniqa [which.max(tabulate(match(a, uniqa)))]
mody <- uniqy[which.max(tabulate(match(y, uniqy)))]
print("Mode of A")
print(moda)
print("Mode of Y")
print(mody)
print("Correlation between A and Y")
print(cor(a,y))
print("Covariance between A and Y")
print(cov(a,y))
dt <- matrix(c(mean(a),mean(y),sd(a),sd(y),var(a),var(y),median(a),median(y),skewness(a),skewness(y),kurtosis(a),kurtosis(y),moda,mody,cor(a,y),cov(a,y)),ncol=2,byrow=TRUE)
rownames(dt) <- c("mean","sd","var","median","skewness","kurtosis","mod","corelation and covariance")
dt
write.table(dt, "Note.txt", sep="\t")
write.xlsx(dt, "Sheet.xlsx")
library(moments)
library(xlsx)
seed<-1811994
set.seed(seed)
print("Seed:")
print(seed)
print("Correlation between A and Y")
print(cor(a,y))
library(moments)
library(xlsx)
seed<-1811994
set.seed(seed)
print("Seed:")
print(seed)
#Normal Distribution
a<-rnorm(30)
y<-rnorm(30)
print("Value of A : ")
print(a)
print("Value of Y : ")
print(y)
print("Mean of A")
print(mean(a))
print("Mean of Y")
print(mean(y))
print("Standard Deviation of A")
print(sd(a))
print("Standard Deviation of Y")
print(sd(y))
print("Variation of A")
print(var(a))
print("Variation of Y")
print(var(y))
print("Median of A")
print(median(a))
print("Median of Y")
print(median(y))
print("Skewness of A")
print(skewness(a))
print("Skewness of Y")
print(skewness(y))
print("Kurtosis of A")
print(kurtosis(a))
print("Kurtosis of Y")
print(kurtosis(y))
#Mode for a
uniqa <- unique(a)
print(uniqa [which.max(tabulate(match(a, uniqa)))])
#Mode for y
uniqy <- unique(y)
moda <- uniqa [which.max(tabulate(match(a, uniqa)))]
mody <- uniqy[which.max(tabulate(match(y, uniqy)))]
print("Mode of A")
print(moda)
print("Mode of Y")
print(mody)
print("Correlation between A and Y")
print(cor(a,y))
print("Covariance between A and Y")
print(cov(a,y))
dt <- matrix(c(mean(a),mean(y),sd(a),sd(y),var(a),var(y),median(a),median(y),skewness(a),skewness(y),kurtosis(a),kurtosis(y),moda,mody,cor(a,y),cov(a,y)),ncol=2,byrow=TRUE)
rownames(dt) <- c("mean","sd","var","median","skewness","kurtosis","mod","corelation and covariance")
dt
write.table(dt, "Note.txt", sep="\t")
write.xlsx(dt, "Sheet.xlsx")
data <- read.delim(file.choose(), header = FALSE, sep = " ")
data
View(data)
View(data)
colnames(data) <- c("age", "sex", "cp", "trestbps", "chol", "fbs", "restecg", "thalach", "exang", "oldpeak", "slope", "ca", "thal", "num")
write.csv(data, file = "statlog.csv")
data <- read.csv(file.choose(), header = T)
data <- read.delim(file.choose(), header = FALSE, sep = ",")
data <- read.delim(file.choose(), header = FALSE, sep = ",")
data <- read.delim(file.choose(), header = FALSE, sep = ",")
View(data)
View(data)
data <- read.delim(file.choose(), header = FALSE, sep = ",")
features <- c("OVERALL_DIAGNOSIS", sprintf("f%1d", seq(1,22)))
colnames(data) <- features
write.csv(data, file = "spect-train.csv")
data <- read.delim(file.choose(), header = FALSE, sep = ",")
View(data)
View(data)
features <- c("OVERALL_DIAGNOSIS", sprintf("f%1d", seq(1,22)))
colnames(data) <- features
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
data$num <- as.factor(data$num)
set.seed(511)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
library(tree)
tree_model <- tree(num ~ ., train)
p2 <- predict(tree_model, test, type = 'class')
(tab2 <- table(predicted = p2, Actual = test$num))
(1 - sum(diag(tab2))/sum(tab2)) * 100
(sum(diag(tab2))/sum(tab2)) * 100
cv_tree = cv.tree(tree_model, FUN = prune.misclass)
names(cv_tree)
plot(cv_tree$size,
cv_tree$dev,
type = 'b')
cv_tree = cv.tree(tree_model, FUN = prune.misclass)
names(cv_tree)
plot(cv_tree$size,
cv_tree$dev,
type = 'b')
pruned_model = prune.misclass(tree_model, best = 8)
plot(pruned_model)
text(pruned_model, pretty = 0)
p2 <- predict(pruned_model, test, type = 'class')
(tab2 <- table(predicted = p2, Actual = test$num))
(1 - sum(diag(tab2))/sum(tab2)) * 100
(sum(diag(tab2))/sum(tab2)) * 100
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
set.seed(511)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
library(tree)
tree_model <- tree(num ~ ., train)
plot(tree_model)
text(tree_model, pretty = 0)
pred = predict(tree_model, test)
mean((pred-test$num)^2)
plot(pred,test$num)
library(randomForest)
fit = randomForest(num ~., train, mtry=4, importance = TRUE)
plot(fit)
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
set.seed(511)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
library(tree)
tree_model <- tree(num ~ ., train)
plot(tree_model)
text(tree_model, pretty = 0)
pred = predict(tree_model, test)
mean((pred-test$num)^2)
library(tree)
tree_model <- tree(num ~ ., train)
plot(tree_model)
text(tree_model, pretty = 0)
pred = predict(tree_model, test)
library(tree)
tree_model <- tree(OVERALL_DIAGNOSIS ~ ., train)
plot(tree_model)
text(tree_model, pretty = 0)
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
View(data)
View(data)
set.seed(511)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
library(tree)
tree_model <- tree(OVERALL_DIAGNOSIS ~ ., train)
plot(tree_model)
text(tree_model, pretty = 0)
pred = predict(tree_model, test)
mean((pred-test$num)^2)
library(tree)
tree_model <- tree(OVERALL_DIAGNOSIS ~ ., train)
plot(tree_model)
text(tree_model, pretty = 0)
pred = predict(tree_model, test)
mean((pred-test$OVERALL_DIAGNOSIS)^2)
plot(pred,test$OVERALL_DIAGNOSIS)
set.seed(511)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
library(tree)
tree_model <- tree(OVERALL_DIAGNOSIS ~ ., train)
plot(tree_model)
text(tree_model, pretty = 0)
pred = predict(tree_model, test)
mean((pred-test$OVERALL_DIAGNOSIS)^2)
plot(pred,test$OVERALL_DIAGNOSIS)
library(randomForest)
fit = randomForest(OVERALL_DIAGNOSIS ~., train, mtry=4, importance = TRUE)
plot(fit)
library(randomForest)
fit = randomForest(OVERALL_DIAGNOSIS ~., train, mtry=4, importance = TRUE)
plot(fit)
library(randomForest)
fit = randomForest(OVERALL_DIAGNOSIS ~., train, mtry=4, importance = TRUE)
plot(fit)
library(randomForest)
fit = randomForest(OVERALL_DIAGNOSIS ~., train, mtry=4, importance = TRUE)
plot(fit)
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
set.seed(511)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
library(tree)
tree_model <- tree(OVERALL_DIAGNOSIS ~ ., train)
plot(tree_model)
text(tree_model, pretty = 0)
pred = predict(tree_model, test)
mean((pred-test$OVERALL_DIAGNOSIS)^2)
plot(pred,test$OVERALL_DIAGNOSIS)
library(randomForest)
fit = randomForest(OVERALL_DIAGNOSIS ~., train, mtry=4, importance = TRUE)
plot(fit)
pred = predict(fit, test)
plot(pred, test$num)
mean((pred-test$num)^2)
# use this model to do prediction on test data
pred = predict(fit, test)
plot(pred, test$OVERALL_DIAGNOSIS)
mean((pred-test$OVERALL_DIAGNOSIS)^2)
varImpPlot(fit)
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
data$OVERALL_DIAGNOSIS <- as.factor(data$OVERALL_DIAGNOSIS)
# Partition data - train 70%, test 30%
set.seed(511)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
## Implenting tree model
library(tree)
tree_model <- tree(OVERALL_DIAGNOSIS~ ., train)
#plot(tree_model)
plot(tree_model)
text(tree_model, pretty = 0)
p2 <- predict(tree_model, test, type = 'class')
(tab2 <- table(predicted = p2, Actual = test$OVERALL_DIAGNOSIS))
# Miss classification error
(1 - sum(diag(tab2))/sum(tab2)) * 100
(sum(diag(tab2))/sum(tab2)) * 100
cv_tree = cv.tree(tree_model, FUN = prune.misclass)
names(cv_tree)
plot(cv_tree$size,
cv_tree$dev,
type = 'b')
pruned_model = prune.misclass(tree_model, best = 8)
plot(pruned_model)
text(pruned_model, pretty = 0)
p2 <- predict(pruned_model, test, type = 'class')
(tab2 <- table(predicted = p2, Actual = test$OVERALL_DIAGNOSIS))
# Miss classification error
(1 - sum(diag(tab2))/sum(tab2)) * 100
#Accuracy
(sum(diag(tab2))/sum(tab2)) * 100
data <- read.csv(file.choose(), header = T)
data$X <- NULL
data$X.1 <- NULL
data$X.2 <- NULL
set.seed(511)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
require(gbm)
cleveland.boost=gbm(OVERALL_DIAGNOSIS ~ . ,train,
distribution = "gaussian",n.trees = 10000,
shrinkage = 0.01, interaction.depth = 4)
summary(cleveland.boost)
plot(cleveland.boost,i="chol")
n.trees = seq(from=100 ,to=10000, by=100) #no of trees-a vector of 100 values
predmatrix<-predict(cleveland.boost,train,n.trees = n.trees)
dim(predmatrix) #dimentions of the Prediction Matrix
test.error<-with(train,apply( (predmatrix-num)^2,2,mean))
head(test.error) #contains the Mean squared test error for each of the 100 trees averaged
test.error<-with(train,apply( (predmatrix-OVERALL_DIAGNOSIS)^2,2,mean))
head(test.error) #contains the Mean squared test error for each of the 100 trees averaged
plot(n.trees , test.error , pch=19,col="blue",xlab="Number of Trees",ylab="Test Error", main = "Perfomance of Boosting on Test Set")
print("Hello World")
setwd("C:/Users/Kevin D'Cruz/Downloads/UMass/GitHub/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
